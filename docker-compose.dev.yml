services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_container
    env_file:
      - .env.local
    environment:
      POSTGRES_MAX_CONNECTIONS: 100
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongodb:
    image: mongo:6.0.5
    container_name: mongodb_container
    env_file:
      - .env.local
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["mongod", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]  # âœ… Removed replica set

  go-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: go_backend_container
    env_file:
      - .env.local
    ports:
      - "8080:8080"  
    volumes:
      - ./backend:/app:cached  
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  mongo_data:
